// <auto-generated />
using System;
using BtgPactual.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BtgPactual.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250706231515_NetValueFormat")]
    partial class NetValueFormat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BtgPactual.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("FundId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FundId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("BtgPactual.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vitor"
                        },
                        new
                        {
                            Id = 2,
                            Name = "John"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Doe"
                        });
                });

            modelBuilder.Entity("BtgPactual.Entities.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Funds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Investments fund A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Investments fund B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Investments fund C"
                        });
                });

            modelBuilder.Entity("BtgPactual.Entities.Rescue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("FundId")
                        .HasColumnType("int");

                    b.Property<decimal>("IncomeTax")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<DateTime>("RescueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("RescueValue")
                        .HasColumnType("DECIMAL(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FundId");

                    b.ToTable("Rescues");
                });

            modelBuilder.Entity("BtgPactual.Entities.Application", b =>
                {
                    b.HasOne("BtgPactual.Entities.Client", "Client")
                        .WithMany("Applications")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BtgPactual.Entities.Fund", "Fund")
                        .WithMany("Applications")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Fund");
                });

            modelBuilder.Entity("BtgPactual.Entities.Rescue", b =>
                {
                    b.HasOne("BtgPactual.Entities.Client", "Client")
                        .WithMany("Rescues")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BtgPactual.Entities.Fund", "Fund")
                        .WithMany("Rescues")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Fund");
                });

            modelBuilder.Entity("BtgPactual.Entities.Client", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Rescues");
                });

            modelBuilder.Entity("BtgPactual.Entities.Fund", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Rescues");
                });
#pragma warning restore 612, 618
        }
    }
}
